[{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement angel.esteban.feliz@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"introduction-to-tidyvalidate","dir":"Articles","previous_headings":"","what":"Introduction to tidyvalidate","title":"Getting Started with tidyvalidate","text":"tidyvalidate package simplifies data validation R providing intuitive interface powerful validate package. helps ensure data quality analysis making easy check column-level row-level conditions data frames.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"why-tidyvalidate","dir":"Articles","previous_headings":"Introduction to tidyvalidate","what":"Why tidyvalidate?","title":"Getting Started with tidyvalidate","text":"Data validation R traditionally faces two challenges: Base R validation functions work well vectors become cumbersome working data frames, especially row-level validations validate package offers comprehensive validation capabilities requires multiple function calls common use cases tidyvalidate addresses challenges providing streamlined interface makes data validation powerful easy use.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"basic-usage","dir":"Articles","previous_headings":"Introduction to tidyvalidate","what":"Basic Usage","title":"Getting Started with tidyvalidate","text":"Let’s start simple example using built-mtcars dataset:","code":"library(tidyvalidate)  # Define and run validations validation_results <- validate_rules(   mtcars,   # Column-level validation   mpg_type = is.numeric(mpg),   hp_type = is.numeric(hp),   # Row-level validation   mpg_threshold = mpg > 15 )"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"understanding-the-results","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Basic Usage","what":"Understanding the Results","title":"Getting Started with tidyvalidate","text":"validate_rules() function returns list two components:","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"summary-of-all-validations","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Basic Usage > Understanding the Results","what":"1. Summary of All Validations","title":"Getting Started with tidyvalidate","text":"summary table shows: - rules passed failed - many items checked rule - number failures NA values","code":"validation_results$summary #>             name items passes fails   nNA  error warning #>           <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1:      mpg_type     1      1     0     0  FALSE   FALSE #> 2:       hp_type     1      1     0     0  FALSE   FALSE #> 3: mpg_threshold    32     26     6     0  FALSE   FALSE"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"detailed-row-level-errors","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Basic Usage > Understanding the Results","what":"2. Detailed Row-Level Errors","title":"Getting Started with tidyvalidate","text":"list contains data tables showing exactly rows failed validation rule, row-level rules (like mpg_threshold).","code":"validation_results$row_level_errors #> $mpg_threshold #>      Broken Rule   mpg #>           <char> <num> #> 1: mpg_threshold  14.3 #> 2: mpg_threshold  10.4 #> 3: mpg_threshold  10.4 #> 4: mpg_threshold  14.7 #> 5: mpg_threshold  13.3 #> 6: mpg_threshold  15.0"},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"adding-row-identifiers","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Advanced Features","what":"Adding Row Identifiers","title":"Getting Started with tidyvalidate","text":"working real datasets, often need identify specific records failed validation. ’s include identifiers error output:","code":"# Add row names as a column cars_with_names <- mtcars cars_with_names$car_name <- rownames(mtcars) rownames(cars_with_names) <- NULL  # Validate with identifiers validation_with_ids <- validate_rules(   cars_with_names,   mpg_threshold = mpg > 15,   keep_rl_cols = \"car_name\"  # Include car_name in error output )  # View failures with identifiers validation_with_ids$row_level_errors #> $mpg_threshold #>      Broken Rule            car_name   mpg #>           <char>              <char> <num> #> 1: mpg_threshold          Duster 360  14.3 #> 2: mpg_threshold  Cadillac Fleetwood  10.4 #> 3: mpg_threshold Lincoln Continental  10.4 #> 4: mpg_threshold   Chrysler Imperial  14.7 #> 5: mpg_threshold          Camaro Z28  13.3 #> 6: mpg_threshold       Maserati Bora  15.0"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"using-dynamic-validation-rules","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Advanced Features","what":"Using Dynamic Validation Rules","title":"Getting Started with tidyvalidate","text":"can make validation rules dynamic using variables. two ways :","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"using-environment-variables","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Advanced Features > Using Dynamic Validation Rules","what":"1. Using Environment Variables","title":"Getting Started with tidyvalidate","text":"","code":"# Define threshold in environment min_mpg <- 12  # Use environment variable in validation validate_rules(   mtcars,   mpg_minimum = mpg > min_mpg ) #> $summary #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     30     2     0  FALSE   FALSE #>  #> $row_level_errors #> $row_level_errors$mpg_minimum #>    Broken Rule   mpg #>         <char> <num> #> 1: mpg_minimum  10.4 #> 2: mpg_minimum  10.4"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"using-the-env-parameter-recommended","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Advanced Features > Using Dynamic Validation Rules","what":"2. Using the env Parameter (Recommended)","title":"Getting Started with tidyvalidate","text":"","code":"# Pass variables explicitly validate_rules(   mtcars,   mpg_minimum = mpg > threshold,   env = list(threshold = 12)  # More explicit and safer ) #> $summary #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     30     2     0  FALSE   FALSE #>  #> $row_level_errors #> $row_level_errors$mpg_minimum #>    Broken Rule   mpg #>         <char> <num> #> 1: mpg_minimum  10.4 #> 2: mpg_minimum  10.4"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"taking-action-on-validation-failures","dir":"Articles","previous_headings":"Introduction to tidyvalidate","what":"Taking Action on Validation Failures","title":"Getting Started with tidyvalidate","text":"action_if_problem() function helps handle validation failures appropriately. offers two modes:","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"stop-on-failure","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Taking Action on Validation Failures","what":"1. Stop on Failure","title":"Getting Started with tidyvalidate","text":"Use want halt execution validations fail:","code":"try({   validate_rules(mtcars, mpg_minimum = mpg > 15) |>     action_if_problem(       message_text = \"Validation failed: Some cars have low MPG\",       problem_action = \"stop\"     ) }) #> [1] \"Validation failed: Some cars have low MPG\" #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     26     6     0  FALSE   FALSE #> Error in action_if_problem(validate_rules(mtcars, mpg_minimum = mpg >  :  #>   Validation failed: Some cars have low MPG"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"warning-on-failure","dir":"Articles","previous_headings":"Introduction to tidyvalidate > Taking Action on Validation Failures","what":"2. Warning on Failure","title":"Getting Started with tidyvalidate","text":"Use want continue execution notified failures:","code":"results_with_warning <- validate_rules(mtcars, mpg_minimum = mpg > 15) |>   action_if_problem(     message_text = \"Warning: Some cars have low MPG\",     problem_action = \"warning\"   ) #> [1] \"Warning: Some cars have low MPG\" #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     26     6     0  FALSE   FALSE #> Warning in action_if_problem(validate_rules(mtcars, mpg_minimum = mpg > : #> Warning: Some cars have low MPG  # Processing continues and you can still access results results_with_warning #> $summary #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     26     6     0  FALSE   FALSE #>  #> $row_level_errors #> $row_level_errors$mpg_minimum #>    Broken Rule   mpg #>         <char> <num> #> 1: mpg_minimum  14.3 #> 2: mpg_minimum  10.4 #> 3: mpg_minimum  10.4 #> 4: mpg_minimum  14.7 #> 5: mpg_minimum  13.3 #> 6: mpg_minimum  15.0"},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"best-practices","dir":"Articles","previous_headings":"Introduction to tidyvalidate","what":"Best Practices","title":"Getting Started with tidyvalidate","text":"Always include meaningful rule names describe validation Use keep_rl_cols include identifying columns error reports Prefer env parameter environment variables dynamic thresholds Use “stop” critical data quality issues Use “warning” advisory checks","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/articles/tidyvalidate.html","id":"next-steps","dir":"Articles","previous_headings":"Introduction to tidyvalidate","what":"Next Steps","title":"Getting Started with tidyvalidate","text":"Explore validate package documentation complex validation rules Check vignettes advanced usage patterns Consider contributing package GitHub","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angel Feliz. Author, maintainer, copyright holder.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Feliz (2025). tidyvalidate: Simplify use 'validate' package. R package version 0.1.0, https://github.com/AngelFelizR/tidyvalidate, https://angelfelizr.github.io/tidyvalidate/.","code":"@Manual{,   title = {tidyvalidate: Simplify the use of 'validate' package},   author = {Angel Feliz},   year = {2025},   note = {R package version 0.1.0, https://github.com/AngelFelizR/tidyvalidate},   url = {https://angelfelizr.github.io/tidyvalidate/}, }"},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Simplify the use of validate package","text":"tidyvalidate simplifies data validation R providing intuitive interface powerful validate package. helps ensure data quality making easy : Write clear, expressive validation rules Check column-level row-level conditions Get detailed reports validation failures Integrate validation checks data pipeline package streamlines common validation tasks leveraging robust foundation validate package R’s error handling system.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simplify the use of validate package","text":"can install development version tidyvalidate GitHub:","code":"# Install pak if you haven't already # install.packages(\"pak\")  # Install tidyvalidate pak::pak(\"AngelFelizR/tidyvalidate\")"},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"basic-validation","dir":"","previous_headings":"Quick Start","what":"Basic Validation","title":"Simplify the use of validate package","text":"Let’s validate data built-mtcars dataset: results show: - summary validations - Detailed information rows failed mpg_minimum check","code":"library(tidyvalidate)  # Define and run validations validation_results <- validate_rules(   mtcars,   # Column type validations   mpg_is_numeric = is.numeric(mpg),   hp_is_numeric = is.numeric(hp),      # Business rule validation   mpg_minimum = mpg > 15 )  # View results validation_results #> $summary #>              name items passes fails   nNA  error warning #>            <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_is_numeric     1      1     0     0  FALSE   FALSE #> 2:  hp_is_numeric     1      1     0     0  FALSE   FALSE #> 3:    mpg_minimum    32     26     6     0  FALSE   FALSE #>  #> $row_level_errors #> $row_level_errors$mpg_minimum #>    Broken Rule   mpg #>         <char> <num> #> 1: mpg_minimum  14.3 #> 2: mpg_minimum  10.4 #> 3: mpg_minimum  10.4 #> 4: mpg_minimum  14.7 #> 5: mpg_minimum  13.3 #> 6: mpg_minimum  15.0"},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"taking-action-on-validation-failures","dir":"","previous_headings":"Quick Start","what":"Taking Action on Validation Failures","title":"Simplify the use of validate package","text":"can automatically handle validation failures two ways:","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"id_1-stop-execution-on-failure","dir":"","previous_headings":"Quick Start > Taking Action on Validation Failures","what":"1. Stop Execution on Failure","title":"Simplify the use of validate package","text":"","code":"try({   validate_rules(mtcars,     mpg_minimum = mpg > 15   ) |>     action_if_problem(       \"Critical: Found cars with MPG below minimum threshold\"     ) }) #> [1] \"Critical: Found cars with MPG below minimum threshold\" #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     26     6     0  FALSE   FALSE #> Error in action_if_problem(validate_rules(mtcars, mpg_minimum = mpg >  :  #>   Critical: Found cars with MPG below minimum threshold"},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"id_2-continue-with-warning","dir":"","previous_headings":"Quick Start > Taking Action on Validation Failures","what":"2. Continue with Warning","title":"Simplify the use of validate package","text":"","code":"validation_results <- validate_rules(mtcars,     mpg_minimum = mpg > 15   ) |>   action_if_problem(     \"Advisory: Some cars have low MPG values\",     problem_action = \"warning\"   ) #> [1] \"Advisory: Some cars have low MPG values\" #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     26     6     0  FALSE   FALSE #> Warning in action_if_problem(validate_rules(mtcars, mpg_minimum = mpg > : #> Advisory: Some cars have low MPG values"},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Simplify the use of validate package","text":"Simple Interface: Write validation rules using familiar R syntax Comprehensive Results: Get summary statistics row-level details Flexible Actions: Choose warnings errors based severity Pipeline Integration: Works seamlessly pipe operator Detailed Reporting: Identify exactly rows failed validation","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Simplify the use of validate package","text":"Visit website full documentation Read Getting Started guide Check Reference section detailed function documentation","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/action_if_problem.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Validation Rule Violations with Custom Actions — action_if_problem","title":"Handle Validation Rule Violations with Custom Actions — action_if_problem","text":"Takes results data validation checks performs specified action (either stopping execution raising warning) validation rules violated. function provides detailed feedback rules failed taking specified action.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/action_if_problem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Validation Rule Violations with Custom Actions — action_if_problem","text":"","code":"action_if_problem(x, message_text, problem_action = c(\"stop\", \"warning\"))"},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/action_if_problem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Validation Rule Violations with Custom Actions — action_if_problem","text":"x list containing validation results, typically output validate_rules(). Must contain 'summary' element columns 'fails' validation metrics. message_text Character string containing message display violations found. message appear console output error/warning. problem_action Character string specifying action take violations found. Must either \"stop\" (halt execution error) \"warning\" (continue execution showing warning).","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/action_if_problem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Validation Rule Violations with Custom Actions — action_if_problem","text":"Invisibly returns input list x. Note problem_action \"stop\" violations found, execution halt returning.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/action_if_problem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handle Validation Rule Violations with Custom Actions — action_if_problem","text":"function performs steps: Checks validation rules violated (fails > 0) violations exist: Prints provided message_text Displays summary failed rules Either stops execution raises warning based problem_action violations exist, silently returns input function particularly useful data processing pipelines want ensure data quality proceeding analysis.","code":""},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/action_if_problem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle Validation Rule Violations with Custom Actions — action_if_problem","text":"","code":"# Example showing how to stop execution on validation failures try({   validate_rules(mtcars, \"hp_limit\" = hp < 200) |>     action_if_problem(       message_text = \"Validation failed: Some cars exceed HP limit\",       problem_action = \"stop\"     ) }) #> [1] \"Validation failed: Some cars exceed HP limit\" #>        name items passes fails   nNA  error warning #>      <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: hp_limit    32     25     7     0  FALSE   FALSE #> Error in action_if_problem(validate_rules(mtcars, hp_limit = hp < 200),  :  #>   Validation failed: Some cars exceed HP limit  # Example showing how to continue with a warning validation_results <- validate_rules(mtcars, \"hp_limit\" = hp < 200) |>   action_if_problem(     message_text = \"Warning: Some cars exceed HP limit\",     problem_action = \"warning\"   ) #> [1] \"Warning: Some cars exceed HP limit\" #>        name items passes fails   nNA  error warning #>      <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: hp_limit    32     25     7     0  FALSE   FALSE #> Warning: Warning: Some cars exceed HP limit"},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/tidyvalidate-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyvalidate: Simplify the use of 'validate' package — tidyvalidate-package","title":"tidyvalidate: Simplify the use of 'validate' package — tidyvalidate-package","text":"`tidyvalidate` package simplifies data validation R providing intuitive interface powerful `validate` package. helps ensure data quality analysis making easy check column-level row-level conditions data frames.","code":""},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/tidyvalidate-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidyvalidate: Simplify the use of 'validate' package — tidyvalidate-package","text":"Maintainer: Angel Feliz angel.esteban.feliz@gmail.com [copyright holder]","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/validate_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Data Frame Values Against Business Rules — validate_rules","title":"Validate Data Frame Values Against Business Rules — validate_rules","text":"high-level wrapper around validate package performs data validation checks set user-defined business rules. function accepts data frame set validation rules, returns summary validation results detailed information violations row level.","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/validate_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Data Frame Values Against Business Rules — validate_rules","text":"","code":"validate_rules(   df,   ...,   env = list(),   keep_rl_cols = NULL,   select_rl_rules = NULL )"},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/validate_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Data Frame Values Against Business Rules — validate_rules","text":"df data.frame data.table containing data validate ... Validation rules expressed named R expressions (e.g., \"age_check\" = age >= 18) env list variables used within validation rules. variables can referenced directly rule expressions (e.g., list(min_age = 18)) keep_rl_cols Character vector specifying additional columns include row-level error output, besides used validation rules select_rl_rules Character vector specifying row-level rules analyze. NULL (default), analyzes failing rules","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/validate_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Data Frame Values Against Business Rules — validate_rules","text":"list containing two elements: summary: data.table containing validation results rules, including: name: name validation rule items: Number items checked passes: Number passing checks fails: Number failing checks nNA: Number NA values encountered row_level_errors: list data.tables, one failing rule, containing: Broken Rule: name failed validation rule Columns used validation rule Additional columns specified keep_rl_cols","code":""},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/validate_rules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Data Frame Values Against Business Rules — validate_rules","text":"function provides two key benefits: simplifies process validating data multiple business rules makes easy identify specific rows violate rule function stop error validation rule returns NA values, considered invalid results rather rule violations.","code":""},{"path":[]},{"path":"https://angelfelizr.github.io/tidyvalidate/reference/validate_rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Data Frame Values Against Business Rules — validate_rules","text":"","code":"# Validate car data against mpg and horsepower rules validation_results <- data.table::as.data.table(mtcars, keep.rownames = \"Car Name\") |>   validate_rules(     \"mpg_minimum\" = mpg > min_mpg,     \"hp_maximum\" = hp < 200,     env = list(min_mpg = 15),     keep_rl_cols = \"Car Name\"   )  # View summary of all rules validation_results$summary #>           name items passes fails   nNA  error warning #>         <char> <int>  <int> <int> <int> <lgcl>  <lgcl> #> 1: mpg_minimum    32     26     6     0  FALSE   FALSE #> 2:  hp_maximum    32     25     7     0  FALSE   FALSE  # View specific rows that violated each rule validation_results$row_level_errors #> $mpg_minimum #>    Broken Rule            Car Name   mpg #>         <char>              <char> <num> #> 1: mpg_minimum          Duster 360  14.3 #> 2: mpg_minimum  Cadillac Fleetwood  10.4 #> 3: mpg_minimum Lincoln Continental  10.4 #> 4: mpg_minimum   Chrysler Imperial  14.7 #> 5: mpg_minimum          Camaro Z28  13.3 #> 6: mpg_minimum       Maserati Bora  15.0 #>  #> $hp_maximum #>    Broken Rule            Car Name    hp #>         <char>              <char> <num> #> 1:  hp_maximum          Duster 360   245 #> 2:  hp_maximum  Cadillac Fleetwood   205 #> 3:  hp_maximum Lincoln Continental   215 #> 4:  hp_maximum   Chrysler Imperial   230 #> 5:  hp_maximum          Camaro Z28   245 #> 6:  hp_maximum      Ford Pantera L   264 #> 7:  hp_maximum       Maserati Bora   335 #>"},{"path":"https://angelfelizr.github.io/tidyvalidate/news/index.html","id":"tidyvalidate-010","dir":"Changelog","previous_headings":"","what":"tidyvalidate 0.1.0","title":"tidyvalidate 0.1.0","text":"Introducing validate_rules() action_if_problem() functions.","code":""}]
